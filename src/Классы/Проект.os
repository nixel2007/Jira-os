#Использовать json
#Использовать 1connector


Перем id Экспорт;
Перем key Экспорт;
Перем name Экспорт;
Перем projectTypeKey Экспорт;
Перем projectTemplateKey Экспорт;
Перем description Экспорт;
Перем lead Экспорт;
Перем url Экспорт;
Перем assigneeType Экспорт;
Перем avatarId Экспорт;
Перем issueSecurityScheme Экспорт;
Перем permissionScheme Экспорт;
Перем notificationScheme Экспорт;
Перем workflowSchemeId Экспорт;
Перем categoryId Экспорт;
Перем projectKeys Экспорт;



Перем self, expand, avatarUrls;


Перем Логин Экспорт, Пароль Экспорт, АдресСистемы Экспорт, КукиДоступа Экспорт;
Перем СоотРеализованыхЗапросов;






Процедура ПриСозданииОбъекта(ДанныеУстановки = Неопределено, ПараметрыДоступа = Неопределено) Экспорт
	
	Если НЕ ПараметрыДоступа = Неопределено Тогда
		Логин = ПараметрыДоступа.Логин;
		Пароль = ПараметрыДоступа.Пароль;
		АдресСистемы = ПараметрыДоступа.АдресСистемы;
		КукиДоступа = ПараметрыДоступа.КукиДоступа;
	КонецЕсли;
	
	
	Если ДанныеУстановки = Неопределено Тогда
		id = "";
		self = "";
		key = "";
		fields = Новый Структура();
	Иначе
		УстановитьДанные(ДанныеУстановки);
	КонецЕсли;
	
	СоотРеализованыхЗапросов = ПолучитьСоотРеализованыхЗапросов();
	
КонецПроцедуры

Процедура УстановитьДанные(Данные) Экспорт
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		
		УстановитьДанныеИзСтруктуры(Данные);
		
	ИначеЕсли ТипЗнч(Данные) = Тип("Строка") Тогда
		
		_преобразовательJSON = Новый ПарсерJSON();
		
		JSONПакет = _преобразовательJSON.ПрочитатьJSON(Данные, , , Истина);
		
		УстановитьДанныеИзСтруктуры(JSONПакет);
		
	Иначе
		ВызватьИсключение "Установка данных типом " + ТипЗнч(Данные) + " не реализована";
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьДанныеИзСтруктуры(СтруктураДанных)
	
	
		
	
	
	Если НЕ СтруктураДанных.Свойство("key", key) Тогда
		ВызватьИсключение "Свойство key не определено в данных установки";
	КонецЕсли;
	
	СтруктураДанных.Свойство("id", id);
	СтруктураДанных.Свойство("name", name);
	СтруктураДанных.Свойство("projectTypeKey", projectTypeKey);
	СтруктураДанных.Свойство("projectTemplateKey", projectTemplateKey);
	СтруктураДанных.Свойство("description", description);
	СтруктураДанных.Свойство("lead", lead);
	СтруктураДанных.Свойство("url", url);
	СтруктураДанных.Свойство("assigneeType", assigneeType);
	СтруктураДанных.Свойство("avatarId", avatarId);
	СтруктураДанных.Свойство("issueSecurityScheme", issueSecurityScheme);
	СтруктураДанных.Свойство("permissionScheme", permissionScheme);
	СтруктураДанных.Свойство("notificationScheme", notificationScheme);
	СтруктураДанных.Свойство("workflowSchemeId", workflowSchemeId);
	СтруктураДанных.Свойство("categoryId", categoryId);
	СтруктураДанных.Свойство("projectKeys", projectKeys);	
	
КонецПроцедуры

Функция ПолучитьСоотРеализованыхЗапросов()
	СтркТипЗапроса = Новый Структура("гет,пост,пут,удалить", "GET", "POST", "PUT", "DELETE");
	
	СтрокаПоляПараметровAPI = "ТипЗапросаREST,АдресREST,ПараметрыШаблонаREST,ПараметрыЗапросаREST";
	
	СоответствиеЗапросов = Новый Соответствие();
	
	Возврат СоответствиеЗапросов;
КонецФункции

