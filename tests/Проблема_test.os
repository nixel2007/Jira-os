#Использовать asserts
#Использовать json
#Использовать "../src"

Перем Логин Экспорт, Пароль Экспорт, АдресСистемы Экспорт, КукиДоступа Экспорт;
Перем СоотРеализованыхЗапросов;


// -------------------- Примеры текучие утверждения ---------//
	
	//Ожидаем.Что(1 > 0).ЭтоИстина();
	//Ожидаем.Что(13 = 2).Не_().ЭтоИстина();
	//Ожидаем.Что(5 = 7).ЭтоЛожь();
	//Ожидаем.Что(5).Равно(5);
	//Ожидаем.Что(4).Больше(2);
	//Ожидаем.Что(7).БольшеИлиРавно(7);
	//Ожидаем.Что(НекийМассив.Количество()).Минимум(9);
	//Ожидаем.Что(90).МеньшеИлиРавно(100);
	//Ожидаем.Что(СтрДлина(НекаяСтрока)).Максимум(90);
	//Ожидаем.Что(55).Меньше(56);
	//Ожидаем.Что(1).Заполнено();
	//Ожидаем.Что(Новый Массив).Существует();
	//Ожидаем.Что(Неопределено).ЭтоНеопределено();
	//Ожидаем.Что(ВыборкаИзБД.НекоеПоле).ЭтоNull();
	//Ожидаем.Что("").ИмеетТип("Строка");
	//Ожидаем.Что(7).Между(1, 10);
	//Ожидаем.Что("Некая строка").Содержит("стр");
	//Ожидаем.Что("Некая строка").ИмеетДлину(12);   	
	//Ожидаем.Что("Некая строка")
	//	.Существует()
	//	.Не_().ИмеетТип("Число")
	//	.ИмеетДлину(12)
	//	.Не_().Содержит("!!!");
	// -------------------- Конец текучие утверждения ---------//
	



Перем юТест;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	юТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьИнициализациюКлассаПроблема");

	ИменаТестов.Добавить("ТестДолжен_ПроверитьУстановкуДанныхВПроблемуСтруктурой");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьУстановкуДанныхВПроблемуПакетомJSON");

	ИменаТестов.Добавить("ТестДолжен_ПроверитьИзменитьПроблему");

	

	Возврат ИменаТестов;
	
КонецФункции

Процедура ТестДолжен_ПроверитьИнициализациюКлассаПроблема() Экспорт
	
	Проблема = Новый Проблема();
	Ожидаем.Что(ТипЗнч(Проблема) = Тип("Проблема")).Равно(Истина);	
	Ожидаем.Что(Проблема.key).ИмеетТип("Строка").Не_().Заполнено();
	Ожидаем.Что(Проблема.id).ИмеетТип("Строка").Не_().Заполнено();	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьУстановкуДанныхВПроблемуСтруктурой() Экспорт

	
	Проблема = Новый Проблема();

	ЭталонСоотПоля = Новый Структура();
	ЭталонСоотПоля.Вставить("summary", "Привет");
	ЭталонСоотПоля.Вставить("description", "Привет мир");

	ЭталоннаяСтруктура = Новый Структура();	
	ЭталоннаяСтруктура.Вставить("id", "test_id");
	ЭталоннаяСтруктура.Вставить("self", "test_self");
	ЭталоннаяСтруктура.Вставить("key", "TEST-1");
	ЭталоннаяСтруктура.Вставить("fields", ЭталонСоотПоля);
	
	Проблема.УстановитьДанные(ЭталоннаяСтруктура);

	Ожидаем.Что(Проблема.id).ИмеетТип("Строка").Равно("test_id");
	Ожидаем.Что(Проблема.key).ИмеетТип("Строка").Равно("TEST-1");

	Ожидаем.Что(Проблема.fields.summary).ИмеетТип("Строка").Равно("Привет");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьУстановкуДанныхВПроблемуПакетомJSON() Экспорт
	Проблема = Новый Проблема();

	ЭталонныйПакетJSON = "
	|{
    |""id"": ""17148"",
    |""self"": ""https://dev.jira.ru/rest/api/2/issue/17148"",
    |""key"": ""TEST-2"",
    |""fields"": {        
    |    ""description"": ""тест описания "",
    |    ""summary"": ""Тест редактирование 4""
    |	}
	|}";



	Проблема.УстановитьДанные(ЭталонныйПакетJSON);
	
	Ожидаем.Что(Проблема.id).ИмеетТип("Строка").Равно("17148");
	Ожидаем.Что(Проблема.key).ИмеетТип("Строка").Равно("TEST-2");

	Ожидаем.Что(Проблема.fields.summary).ИмеетТип("Строка").Равно("Тест редактирование 4");


КонецПроцедуры

Процедура ТестДолжен_ПроверитьИзменитьПроблему() Экспорт

	КлассJira = Новый Jira();

	КлючПроблемы = "TEST-2";
	Проблема = КлассJira.ПолучитьПроблему(КлючПроблемы);
	Ожидаем.Что(Проблема.fields.summary).ИмеетТип("Строка").Равно("Тест редактирование 4");

	Стркfields = Новый Структура("summary","Тест изменения");
	Результат = Проблема.Изменить(Стркfields);

	КлючПроблемы = "TEST-2";
	Проблема = КлассJira.ПолучитьПроблему(КлючПроблемы);
	Ожидаем.Что(Проблема.fields.summary).ИмеетТип("Строка").Равно("Тест изменения");

	Стркfields = Новый Структура("summary","Тест редактирование 4");
	Результат = Проблема.Изменить(Стркfields);

	КлючПроблемы = "TEST-2";
	Проблема = КлассJira.ПолучитьПроблему(КлючПроблемы);
	Ожидаем.Что(Проблема.fields.summary).ИмеетТип("Строка").Равно("Тест редактирование 4");
	
	
КонецПроцедуры
